
name: 🔍 Code Quality
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  code-quality:
    name: 🔍 Code Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
      fail-fast: false
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: ⬆️ Upgrade pip
        run: |
          python -m pip install --upgrade pip wheel setuptools
      - name: 📦 Install tooling
        run: |
          pip install ruff mypy black isort flake8 bandit safety pre-commit
      - name: 📋 Display environment info
        run: |
          python --version
          pip --version
          pip list
      - name: 🔍 Run pre-commit hooks
        run: |
          pre-commit run --all-files --show-diff-on-failure
        continue-on-error: true
      - name: 🐍 Lint with Ruff
        run: |
          ruff check . --output-format=github
        continue-on-error: true
      - name: 🖤 Check code formatting with Black
        run: |
          black --check --diff .
        continue-on-error: true
      - name: 📋 Check import sorting with isort
        run: |
          isort --check-only --diff .
        continue-on-error: true
      - name: 🔍 Lint with flake8
        run: |
          flake8 . --statistics --tee --output-file=flake8-report.txt
        continue-on-error: true
      - name: 🔒 Security check with Bandit
        run: |
          bandit -r . -f json -o bandit-report.json || true
          bandit -r . -f txt || true
        continue-on-error: true
      - name: 🛡️ Check dependencies with Safety
        run: |
          safety check --full-report --output safety-report.txt || true
          safety check --json --output safety-report.json || true
        continue-on-error: true
      - name: 🔍 Type checking with MyPy
        run: |
          mypy . --html-report mypy-report --txt-report mypy-report || true
        continue-on-error: true
      - name: 📄 Upload Code Quality Reports
        uses: actions/upload-artifact@v4
        with:
          name: code-quality-reports-${{ matrix.python-version }}
          path: |
            flake8-report.txt
            bandit-report.json
            safety-report.txt
            safety-report.json
            mypy-report
          if-no-files-found: ignore
      - name: 📊 Dependency Audit
        run: |
          python -m pip install --upgrade pip pip-audit || true
          pip-audit -r requirements.txt || true
      - name: 📚 Documentation Quality
        run: |
          echo "Docs checks placeholder"
        continue-on-error: true