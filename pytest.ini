[tool:pytest]
# Pytest Configuration for Telegram Audio Downloader
# ==================================================

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = -v --tb=short
markers =
    slow: marks tests as slow
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    resume: marks tests for advanced resume functionality
    cli: marks tests for command line interface
    database: marks tests for database functionality
    downloader: marks tests for downloader functionality
    config: marks tests for configuration functionality
    error: marks tests for error handling functionality
    performance: marks tests for performance functionality
    security: marks tests for security functionality
    network: marks tests for network functionality
    e2e: End-to-end tests
    mock: Tests using mocks
    real_api: Tests using real Telegram API (requires credentials)
    memory: Memory usage tests
    concurrent: Concurrency tests
    error_handling: Error handling tests
    regression: Regression tests
    smoke: Smoke tests for basic functionality

# Asyncio configuration
asyncio_mode = auto

# Timeout configuration
timeout = 300
timeout_method = thread

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore:unclosed:ResourceWarning
    ignore:coroutine.*was never awaited:RuntimeWarning

# Minimum Python version
minversion = 3.8

# Test output
console_output_style = progress

# Coverage configuration
[coverage:run]
source = src/telegram_audio_downloader
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
precision = 2

[coverage:html]
directory = data/coverage/html

[coverage:xml]
output = data/coverage/coverage.xml